
@{
    ViewBag.Title = "Worm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/alco-utils.js" type="text/javascript"></script>
<script src="~/Scripts/webgl_lab/gl-matrix/gl-matrix.js" type="text/javascript"></script>
<script src="~/Scripts/webgl_lab/renderer/renderer-initialization.js" type="text/javascript"></script>
<script src="~/Scripts/webgl_lab/renderer/renderer-shaders.js" type="text/javascript"></script>
<script src="~/Scripts/webgl_lab/renderer/renderer-resources.js" type="text/javascript"></script>
<script src="~/Scripts/webgl_lab/renderer/renderer.js" type="text/javascript"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cannon.js/0.6.2/cannon.js"></script>
               
<script src="~/Scripts/webgl_lab/worm/worm-resources.js" type="text/javascript"></script>
<script src="~/Scripts/webgl_lab/worm/worm.js" type="text/javascript"></script>

<script id="shader-vs" type="x-shader/x-vertex">
    attribute highp vec3 aVertexNormal;
    attribute highp vec3 aVertexPosition;
    attribute highp vec2 aTextureCoord;

    uniform highp mat4 uVPMatrix;
    uniform highp mat4 uMMatrix;
    uniform highp mat4 uMRotationMatrix;

    varying highp vec2 vTextureCoord;
    varying highp vec3 vLighting;

    void main(void) {
        gl_Position = uVPMatrix * uMMatrix * vec4(aVertexPosition, 1.0);
        vTextureCoord = aTextureCoord;

        // Apply lighting effect

        highp vec3 ambientLight = vec3(0.1, 0.1, 0.1);
        highp vec3 directionalLightColor = vec3(1, 1, 1);
        highp vec3 directionalVector = normalize(vec3(-1, -1, -1));

        highp vec4 rotatedNormal = normalize(uMRotationMatrix * vec4(aVertexNormal, 1.0));
        highp float directional = max(dot(rotatedNormal.xyz, -directionalVector), 0.0);
        vLighting = ambientLight + (directionalLightColor * directional);
    }
</script>

<script id="shader-fs" type="x-shader/x-fragment">
    varying highp vec2 vTextureCoord;
    varying highp vec3 vLighting;

    uniform sampler2D uSampler;

    void main(void) {
        highp vec4 texelColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));

        gl_FragColor = vec4(texelColor.rgb * vLighting, texelColor.a);
    }
</script>

<body onload="startWorm()">
    <canvas id="canvasWorm" width="800" height="800"></canvas>
</body>

<script>
    function startWorm() {
        renderer.start(
            {
                "canvasId": "canvasWorm",
                "collectionToRender": worm.objectsToRender, 
                "camera": {
                    "type": "arcball",
                    "eye": vec3.fromValues(0, 15, 2),
                    "center": vec3.fromValues(0, 0, 0),
                    "up": vec3.fromValues(0, 1, 0)
                }
            }
        );
        worm.awake();
    }
</script>